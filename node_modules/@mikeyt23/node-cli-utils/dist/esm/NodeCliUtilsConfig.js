/**
 * Config to control a few misc settings in the node-cli-utils package. This module exports a singleton instance.
 */
export class NodeCliUtilsConfig {
    _traceEnabled = false;
    _orphanProtectionPollingIntervalMillis = 15000;
    _orphanProtectionLoggingEnabled = false;
    _orphanProtectionLoggingPath = './orphanProtection.log';
    _useWslPrefixForDockerCommands = false;
    get traceEnabled() {
        return this._traceEnabled;
    }
    set traceEnabled(value) {
        this._traceEnabled = value;
    }
    get orphanProtectionPollingIntervalMillis() {
        return this._orphanProtectionPollingIntervalMillis;
    }
    set orphanProtectionPollingIntervalMillis(value) {
        this._orphanProtectionPollingIntervalMillis = value;
    }
    get orphanProtectionLoggingEnabled() {
        return this._orphanProtectionLoggingEnabled;
    }
    set orphanProtectionLoggingEnabled(value) {
        this._orphanProtectionLoggingEnabled = value;
    }
    get orphanProtectionLoggingPath() {
        return this._orphanProtectionLoggingPath;
    }
    get useWslPrefixForDockerCommands() {
        return this._useWslPrefixForDockerCommands;
    }
    /**
     * If `true`, docker commands that normally just run `docker` will use `wsl docker` instead. This requires any paths
     * passed to be wsl paths, but these should be handled internally with no additional action required by the caller.
     */
    set useWslPrefixForDockerCommands(value) {
        this._useWslPrefixForDockerCommands = value;
    }
}
/**
 * Singleton instance of {@link NodeCliUtilsConfig}.
 */
export const config = new NodeCliUtilsConfig();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9kZUNsaVV0aWxzQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL05vZGVDbGlVdGlsc0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sT0FBTyxrQkFBa0I7SUFDckIsYUFBYSxHQUFZLEtBQUssQ0FBQTtJQUM5QixzQ0FBc0MsR0FBRyxLQUFLLENBQUE7SUFDOUMsK0JBQStCLEdBQUcsS0FBSyxDQUFBO0lBQ3ZDLDRCQUE0QixHQUFHLHdCQUF3QixDQUFBO0lBQ3ZELDhCQUE4QixHQUFZLEtBQUssQ0FBQTtJQUV2RCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUE7SUFDM0IsQ0FBQztJQUVELElBQUksWUFBWSxDQUFDLEtBQWM7UUFDN0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUE7SUFDNUIsQ0FBQztJQUVELElBQUkscUNBQXFDO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLHNDQUFzQyxDQUFBO0lBQ3BELENBQUM7SUFFRCxJQUFJLHFDQUFxQyxDQUFDLEtBQWE7UUFDckQsSUFBSSxDQUFDLHNDQUFzQyxHQUFHLEtBQUssQ0FBQTtJQUNyRCxDQUFDO0lBRUQsSUFBSSw4QkFBOEI7UUFDaEMsT0FBTyxJQUFJLENBQUMsK0JBQStCLENBQUE7SUFDN0MsQ0FBQztJQUVELElBQUksOEJBQThCLENBQUMsS0FBYztRQUMvQyxJQUFJLENBQUMsK0JBQStCLEdBQUcsS0FBSyxDQUFBO0lBQzlDLENBQUM7SUFFRCxJQUFJLDJCQUEyQjtRQUM3QixPQUFPLElBQUksQ0FBQyw0QkFBNEIsQ0FBQTtJQUMxQyxDQUFDO0lBRUQsSUFBSSw2QkFBNkI7UUFDL0IsT0FBTyxJQUFJLENBQUMsOEJBQThCLENBQUE7SUFDNUMsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQUksNkJBQTZCLENBQUMsS0FBYztRQUM5QyxJQUFJLENBQUMsOEJBQThCLEdBQUcsS0FBSyxDQUFBO0lBQzdDLENBQUM7Q0FDRjtBQUVEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQSJ9